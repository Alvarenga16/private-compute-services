// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Summarizes an interaction between Safecomms and the user/UI.
schema SafecommsInteraction
  // Unique identifier (unique on a given device).
  id: Long
  // Timestamp (ms) when the message was received.
  timestampMillis: Long
  // The value that the model predicted for the message.
  predictedValue: Double
  // Whether the message was received by a contact.
  isContact: Boolean
  // Whether the message was the first one from the sender.
  isFirstMessageFromSender: Boolean
  // Whether the message contains a url.
  hasUrl: Boolean
  // Whether the message contains an email address.
  hasEmail: Boolean
  // Whether the message contains a phone.
  hasPhoneNumber: Boolean
  // Whether the message contains a currency symbol.
  hasCurrencySymbol: Boolean
  // The name of the package of the app in which the message was received.
  packageName: Text
  // The length of the message.
  messageLength: Int
  // The change in the feature state. Possible values: [
  //   // The user did not change whether the feature is enabled / disabled.
  //   NONE,
  //   // The user disabled the feature.
  //   DISABLED,
  //   // The enabled disabled the feature.
  //   ENABLED
  // ]
  featureInteraction: Int
  // The interaction between the user and the feature. Possible values: [
  //   // The feature did not alert the user for the message.
  //   NO_ALERT
  //   // The feature alerted the user through the notification.
  //   NOTIFICATION_WARNING
  //   // The feature alerted the user through the messaging app.
  //   IN_APP_WARNING
  //   // The user clicked "more info" through the messaging app.
  //   CLICKED_MORE_INFO
  //   // The user clicked the "report" button.
  //   CLICKED_REPORT
  //   // The user gave the second confirmation for sending the report.
  //   CONFIRMED_REPORT
  // ]
  userInteraction: Int
  // The version of the model.
  modelVersion: Text

// Summarizes Safecomms conversation entity.
schema SafecommsConversationEntity
  // Unique identifier (unique on a given device).
  id: Text
  // Timestamp (ms) when the message was received.
  timestampMillis: Long
  // The name of the package of the app in which the message was received.
  messagingAppPackageName: Text
  // The identified risk type of the conversation. Possible values: [
  //   // General risk type in case no type was provided internally or the risk
  //   // does not match any other risk type.
  //   OTHER
  //   // A general phishing attempt used for most cases, unless a more
  //   // specific one is provided by the analysis.
  //   PHISHING
  //   // A request for OTP, password, PIN or similar sensitive private data to
  //   // get credentials.
  //   PASSWORD_THEFT
  // ]
  riskType: Int
  // The verdict of the conversation. Possible values: [
  //   // No analysis was run on this conversation, or such analysis is
  //   // irrelevant.
  //   NOT_APPLICABLE
  //   // The conversation is very likely to be safe.
  //   SAFE
  //   // There is no conclusive decision about the conversation safety.
  //   AMBIGUOUS
  //   // The message is very likely to contain harmful content.
  //   HARMFUL
  // ]
  verdict: Int
  // The source of the last message in the conversation. Possible values: [
  //   NOTIFICATION
  //   SCREEN_CONTENTS
  // ]
  lastMessageSource: Int
  // The value that the model predicted for the message.
  predictedValue: Double
  // The version of the model.
  modelVersion: Text

// Summarizes Safecomms UI event.
schema SafecommsUiEvent
  // Unique identifier (unique on a given device).
  id: Long
  // The timestamp (ms) of the UI event.
  timestampMillis: Long
  // The safe comms conversation entity id.
  safecommsConversationEntityId: Text
  // The UI screen. Possible values: [
  //   // The onboard screen (e.g. educational screen).
  //   ONBOARDING
  //   // The subtle UI chip.
  //   SUBTLE
  //   // The warning overlay.
  //   WARNING
  //   // The full message overlay.
  //   FULL_MESSAGE
  //   // The permission needed overlay.
  //   PERMISSIONS_NEEDED
  //   // The report confirmation overlay.
  //   REPORT_CONFIRMATION
  //   // The safecommms notification smart actions.
  //   NOTIFICATION_SMART_ACTION
  //   // The report safe confirmation overlay.
  //   REPORT_SAFE_CONFIRMATION
  // ]
  uiScreen: Int
  // The various types of user-feature interactions. Possible values: [
  //   // An impression of the UI screen.
  //   IMPRESSION
  //   // A click on dismiss button.
  //   DISMISS_BUTTON_CLICK
  //   // A click on settings button.
  //   SETTINGS_BUTTON_CLICK
  //   // A click on expand button.
  //   EXPAND_CLICK
  //   // A click on learn more button.
  //   LEARN_MORE_BUTTON_CLICK
  //   // A click on view full message button.
  //   VIEW_FULL_MESSAGE_BUTTON_CLICK
  //   // A click on report button.
  //   REPORT_BUTTON_CLICK
  //   // A click on UI which dismissed the screen.
  //   DISMISS_UI_CLICK
  //   // A click on back button.
  //   BACK_BUTTON_CLICK
  //   // A click on report safe button.
  //   REPORT_SAFE_BUTTON_CLICK
  // ]
  uiEvent: Int

// Summarizes Safecomms feature status change.
schema SafecommsFeatureStatusChangeEvent
  // Unique identifier (unique on a given device).
  id: Long
  // Timestamp (ms) when the feature status changed.
  timestampMillis: Long
  // Indication whether the feature is enabled or not.
  featureEnabled: Boolean
  // The reason why feature is disabled. Possible values: [
  //   // Unknown reason.
  //   UNKNOWN
  //   // Safecomms is not initialized.
  //   NOT_INITIALIZED
  //   // The feature is disabled by server flag.
  //   DISABLED_IN_CONFIG
  //   // The feature is disabled by the user within the settings.
  //   DISABLED_IN_SETTINGS
  //   // The feature is disabled since content capture is disabled.
  //   CONTENT_CAPTURE_DISABLED
  //   // The feature is disabled since ASI is not the default NAS and cannot
  //   // add smart actions to harmful notifications.
  //   NOT_CURRENT_NAS
  //   // The feature is disabled until all resources are retrieved and loaded.
  //   RESOURCES_NOT_LOADED
  // ]
  featureDisableReason: Int

